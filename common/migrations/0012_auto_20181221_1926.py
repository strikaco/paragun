# Generated by Django 2.1.4 on 2018-12-21 19:26

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0011_token_notes'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time of object creation.')),
                ('updated', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time of last object modification.')),
                ('enabled', models.BooleanField(default=True, help_text='Whether or not this object should be enabled.')),
                ('value', models.SlugField(unique=True)),
                ('tags', models.ManyToManyField(blank=True, help_text='Any custom tags related to this object.', to='common.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='pulse',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='common.Token'),
        ),
        migrations.AddField(
            model_name='host',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Any custom tags related to this object.', to='common.Tag'),
        ),
        migrations.AddField(
            model_name='pulse',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Any custom tags related to this object.', to='common.Tag'),
        ),
        migrations.AddField(
            model_name='token',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Any custom tags related to this object.', to='common.Tag'),
        ),
        migrations.AddField(
            model_name='user',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Any custom tags related to this object.', to='common.Tag'),
        ),
    ]
